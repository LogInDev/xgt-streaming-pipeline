services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - ./zookeeper/data:/var/lib/zookeeper/data
      - ./zookeeper/log:/var/lib/zookeeper/log
    restart: always
    networks:
      - pipeline-net

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    restart: always
    networks:
      - pipeline-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    restart: always
    networks:
      - pipeline-net

  kafka-init:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-init
    depends_on:
      - kafka
    volumes:
      - ./scripts/create-topics.sh:/create-topics.sh
    command: ["bash", "/create-topics.sh"]
    restart: "no"
    networks:
      - pipeline-net

  xgt-producer:
    build:
      context: ./xgt-kafka-producer   # 루트 기준 상대경로
    env_file:
      - ./xgt-kafka-producer/.env
    depends_on:
      - kafka
    restart: always
    networks:
      - pipeline-net
  
  flink-jobmanager:
    image: apache/flink:1.19.0-scala_2.12-java11
    container_name: flink-jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
    networks:
      - pipeline-net
    depends_on:
      - kafka

  flink-taskmanager:
    image: apache/flink:1.19.0-scala_2.12-java11
    container_name: flink-taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 2
    networks:
      - pipeline-net

  pyflink-job:
    build:
      context: ./pyflink-job
    container_name: pyflink-job
    depends_on:
      - kafka
      - flink-jobmanager
    networks:
      - pipeline-net
    command: >
      bash -c "
        echo '⏳ Waiting for Flink JobManager...';
        until curl -s http://flink-jobmanager:8081/overview; do sleep 2; done;
        echo '🚀 Submitting PyFlink job';
        python /opt/job/sensor_stream.py
      "

networks:
  pipeline-net:
    external: true